<?xml version="1.0" encoding="utf-8"?>
<manpage>
  <utility>trackverify</utility>
  <author>Brian Langenberger</author>
  <section>1</section>
  <name>verifies the data content of tracks</name>
  <title>Track Verify</title>
  <synopsis>[OPTIONS] &lt;track 1&gt; [track 2] ...</synopsis>
  <description>
    trackverify takes one or more audio tracks, verifies their files
    for correctness, and displays its results to standard output.
    If directories are given, they are searched recursively for any
    supported audio files and verified if found.
  </description>
  <options>
    <option short="h" long="help">show a list of options and exit</option>
    <option short="t" long="type" arg="type">
      An audio format to restrict searching to.
      If given, only files of the given audio types will be verified.
      May be used multiple times.
      For a list of available audio formats, try: -t help
    </option>
    <option short="j" long="joint" arg="processes">
      The maximum number of tracks to verify at one time.
      If one has multiple CPUs or CPU cores, allowing
      trackverify(1)
      to use all of them simultaneously can increase verification speed.
      However, the maximum speed is likely to be limited by
      I/O-bound rather than CPU-bound.
    </option>
    <option short="R" long="no-summary">
      do not display summary information when verification is complete
    </option>
  </options>
  <element name="verification">
    <p>
      All audio formats do not carry an equal measure of error protection.
      What Python Audio Tools is capable to detecting depends on the
      audio format.
      For example, FLAC files have their frame checksums verified,
      in addition to the file's MD5 hash.
      Files packed in Ogg containers have their Ogg page checksums verified.
      However, for formats such as Wave, there is no standard way to verify
      that its data content is correct; we can only ensure that its
      blocks of data are the correct size.
    </p>
  </element>
  <examples>
    <example>
      <description>
        Check all FLAC files in the current directory:
      </description>
      <command>trackverify *.flac</command>
    </example>
    <example>
      <description>
        Check only MP3 files found in the directory audio/
      </description>
      <command>trackverify -t mp3 audio/</command>
    </example>
  </examples>
</manpage>
